name: Backend Prod Batch Server CD

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # Spring Boot 애플리케이션을 빌드하여 도커허브에 푸시하는 과정
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # 1. Java 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 2. Spring Boot 애플리케이션 빌드
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean bootJar

      # 3. Docker 이미지 빌드
      - name: docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/groundflip_prod_batch:latest .

      # 4. DockerHub 로그인
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_EMAIL }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 5. Docker Hub 이미지 푸시
      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/groundflip_prod_batch:latest

      # 6. gradlew 권한 설정
      - name: Add permission
        run: chmod +x gradlew

      # 7. docker compose up
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_PROD }}
          username: ubuntu
          key: ${{ secrets.EC2_PEM_KEY_PROD }}
          script: |
            echo "DB_URI=${{ secrets.DB_URI_PROD }}" > .env
            echo "DB_USERNAME=${{ secrets.DB_USERNAME_PROD }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD_PROD }}" >> .env
            echo "REDIS_HOST=${{ secrets.REDIS_HOST_PROD }}" >> .env
            echo "FIREBASE_SECRET_KEY=${{ secrets.FIREBASE_SECRET_KEY }}" >> .env
            
            sudo docker rm -f $(sudo docker ps -qa)
            sudo docker-compose pull
            sudo docker-compose up -d
            sudo docker image prune -f
